

	while (REFCTL0 & REFGENBUSY);
	REFCTL0 |= REFON;

	ADC12CTL0 = 0;
	ADC12CTL1 = 0;
	ADC12CTL2 = 0;
	ADC12CTL3 = 0;

	ADC12MEM0 = 0;
	ADC12MEM1 = 0;
	ADC12MEM2 = 0;
	ADC12MEM3 = 0;		//analog_sampleAll();	

		// Enable multiple conversions.
		ADC12CTL0 = ADC12SHT0_2 + ADC12ON;// 16ADCclks, MSC, ADC ON
	  	ADC12CTL1 = ADC12SHP + ADC12CONSEQ_0;     // sampling timer, s/w trig.,single sequence
		ADC12CTL2 = ADC12RES__12BIT;

		P3SEL0 = (1<<1);
		P3SEL1 = (1<<1);

		

		ADC12MCTL0 = ADC12INCH_4 + ADC12VRSEL0;
		ADC12CTL0 |= ADC12ENC + ADC12SC;
		while (ADC12CTL1 & ADC12BUSY);
		vcc = ADC12MEM0;
		ADC12CTL0 &= ~(ADC12ENC);
while (ADC12CTL1 & ADC12BUSY);
		ADC12MCTL0 = ADC12INCH_5 + ADC12VRSEL0;
		ADC12CTL0 |= ADC12ENC + ADC12SC;
		while (ADC12CTL1 & ADC12BUSY);
		temp_ext = ADC12MEM0;
		ADC12CTL0 &= ~(ADC12ENC);
while (ADC12CTL1 & ADC12BUSY);
		ADC12MCTL0 = ADC12INCH_10 + ADC12VRSEL0;
		ADC12CTL0 |= ADC12ENC + ADC12SC;
		while (ADC12CTL1 & ADC12BUSY);
		sample1 = ADC12MEM0;
		ADC12CTL0 &= ~(ADC12ENC);
while (ADC12CTL1 & ADC12BUSY);
		ADC12MCTL0 = ADC12INCH_13 + ADC12VRSEL0;
		ADC12CTL0 |= ADC12ENC + ADC12SC;
		while (ADC12CTL1 & ADC12BUSY);
		sample2 = ADC12MEM0;
		ADC12CTL0 &= ~(ADC12ENC);
		while (ADC12CTL1 & ADC12BUSY);